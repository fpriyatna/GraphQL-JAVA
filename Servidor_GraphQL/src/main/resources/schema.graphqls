schema {
  query: Query
  mutation: Mutation
}

type Query {
  allLinks(filter: LinkFilter, skip: Int = 0, first: Int = 0): [Link]
}

type Mutation {
	createLink(url: String!, description: String!, postedBy: String): Link
	createUser(name: String!, authProvider: AuthData!): User
	createVote(linkId: ID, userId: ID): Vote
}

type Link {
  id: ID!
  url: String!
  description: String
  postedBy: User
}

input LinkFilter {
  description_contains: String
  url_contains: String
}

type Vote {
    id: ID!
    createdAt: DateTime!
    user: User!
    link: Link!
}

type User {
      id: ID!
      name: String!
      email: String
      password: String
    }

input AuthData {
      email: String!
      password: String!
    }

scalar DateTime